{"version":3,"file":"static/js/160.39d352f4.chunk.js","mappings":"sPACA,EAA8B,8B,SCqD9B,EAhDiB,WACf,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,oGAEnBN,GAAW,GAFQ,UAGEO,EAAAA,EAAAA,IAAaJ,GAHf,OAGbK,EAHa,OAKnBV,EAAUU,GALS,gDAOnBN,EAAS,EAAD,IAPW,yBASnBF,GAAW,GATQ,4EAAH,qDAYpBM,GACD,GAAE,CAACH,IAEJ,IAAMM,EAAWZ,EAAOa,KACtB,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,cAAeC,EAAjC,EAAiCA,aAAjC,OACE,2BACE,gBACEC,MAAM,MACNC,OAAO,MACPC,IAAG,0CAAqCH,GACxCI,IAAKL,KAEP,uBAAIA,KACJ,uCAAeD,OARRD,EADX,IAaF,OACE,gCACGZ,IAAW,sCACXE,IAAS,iCACTJ,IACC,gBAAKsB,UAAWC,EAAhB,UACE,wBAAKX,QAKd,C,sLCpDKY,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAe,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACNP,EAASQ,IAC9B,sBAEA,CACEL,OAAQ,CACNI,KAAAA,KANuB,uBACrBE,EADqB,EACrBA,KADqB,kBAUtBA,EAAKC,SAViB,2CAAH,qDAafC,EAAe,mCAAG,WAAM7B,GAAN,yFACNkB,EAASQ,IAAT,iBAAuB1B,IADjB,uBACrB2B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAc,mCAAG,WAAMC,GAAN,yFACLb,EAASQ,IAAT,gBAA8B,CACnDL,OAAQ,CACNU,MAAAA,KAHwB,uBACpBJ,EADoB,EACpBA,KADoB,kBAMrBA,EAAKC,SANgB,2CAAH,sDASdxB,EAAY,mCAAG,WAAMJ,GAAN,yFACHkB,EAASQ,IAAT,iBAAuB1B,EAAvB,aADG,uBAClB2B,EADkB,EAClBA,KADkB,kBAEnBA,EAAKK,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAMjC,GAAN,yFACNkB,EAASQ,IAAT,iBAAuB1B,EAAvB,aADM,uBACrB2B,EADqB,EACrBA,KADqB,kBAGtBA,EAAKC,SAHiB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/CastPage/castPage.module.css?5ee2","pages/CastPage/CastPage.jsx","shared/styles/services/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castWrapper\":\"castPage_castWrapper__gX0nq\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastMovie } from 'shared/styles/services/movieApi';\n\nimport css from '../CastPage/castPage.module.css';\n\nconst CastPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCastMovie = async () => {\n      try {\n        setLoading(true);\n        const result = await getCastMovie(movieId);\n        // console.log(result);\n        setMovies(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCastMovie();\n  }, [movieId]);\n\n  const elements = movies.map(\n    ({ id, character, original_name, profile_path }) => (\n      <li key={id}>\n        <img\n          width=\"100\"\n          height=\"150\"\n          src={`https://image.tmdb.org/t/p/w300/${profile_path}`}\n          alt={original_name}\n        />\n        <p>{original_name}</p>\n        <p>Character: {character}</p>\n      </li>\n    )\n  );\n  return (\n    <>\n      {loading && <p>...loading</p>}\n      {error && <p>Error</p>}\n      {movies && (\n        <div className={css.castWrapper}>\n          <ul>{elements}</ul>\n        </div>\n      )}\n    </>\n  );\n};\nexport default CastPage;\n","import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '4a2018560b79424f21a897c5cf387007',\n    language: 'en-US',\n  },\n});\n\nexport const getPopularMovie = async (page = 1) => {\n  const { data } = await instance.get(\n    '/trending/movie/day',\n    //об'єкт з налаштуваннями один з яких params: параметри запиту після ?\n    {\n      params: {\n        page,\n      },\n    }\n  );\n  return data.results;\n};\n\nexport const getDetailsMovie = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data.cast;\n};\n\nexport const getReviewsMovie = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n  // console.log(data.results);\n  return data.results;\n};\n"],"names":["useState","movies","setMovies","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchCastMovie","getCastMovie","result","elements","map","id","character","original_name","profile_path","width","height","src","alt","className","css","instance","axios","baseURL","params","api_key","language","getPopularMovie","page","get","data","results","getDetailsMovie","getSearchMovie","query","cast","getReviewsMovie"],"sourceRoot":""}